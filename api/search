[{"id":"content:0.index.md","path":"/","dir":"","title":"Home","description":"","keywords":[],"body":"     Database & DBMS   Questa relazione ti spiegerà i seguenti concetti:      Parte teorica  con spiegazione DB (modellizzazione, tipi di associazioni, tipi di chiavi), DBMS (con i suoi moduli), piattaforma EasyPhp;   Parte pratica  con spiegazione installazione e primo utilizzo EasyPhp, impostazioni iniziali my.ini e motori di memorizzazione, creazione db, creazione campi (con specifica tipo dati e attributi), chiavi primarie, chiavi esterne e relazioni;  modalità di salvataggio, apertura e gestione del DB (importa / esporta / operazioni);  inserimento record."},{"id":"content:1.teoria:1.database.md","path":"/teoria/database","dir":"teoria","title":"Database","description":"Le basi di dati, o database, sono archivi di dati organizzati e progettati con tecniche di modellazione dati, gestiti su memorie di massa dei computer attraverso software specializzati. L'obiettivo è manipolare e recuperare i dati in modo efficiente, superando le limitazioni degli archivi tradizionali.","keywords":["I Record e i Campi","Chiave Primaria","Proprietà di un DB","Differenze tra DB Relazionale e NoSQL"],"body":"  Database  Le basi di dati, o database, sono archivi di dati organizzati e progettati con tecniche di modellazione dati, gestiti su memorie di massa dei computer attraverso software specializzati. L'obiettivo è manipolare e recuperare i dati in modo efficiente, superando le limitazioni degli archivi tradizionali.    I Record e i Campi  Un file è una collezione di   record , cioè di informazioni logicamente omogenee che\ndescrivono i singoli elementi di una realtà considerata. Ogni record è composto da un insieme di   campi  che contengono i valori assunti dalle caratteristiche scelte per descrivere la realtà.    Chiave Primaria  Una chiave primaria in un database è un campo o un insieme di campi che identifica univocamente ogni record in una tabella. La sua principale caratteristica è la sua unicità all'interno della tabella, garantendo che ogni riga abbia un valore unico per la chiave primaria. Inoltre, la chiave primaria non può contenere valori nulli, e viene utilizzata per stabilire relazioni tra tabelle all'interno del database.  Proprietà di un DB      Eliminazione della ridondanza e dell'inconsistenza : I dati non sono duplicati in archivi separati, evitando campi uguali con valori diversi.   Facilità di accesso ai dati : Il recupero dei dati è rapido e trasparente, anche in database di grandi dimensioni con richieste simultanee da parte di più utenti.   Interrogazioni non predefinite : È possibile interrogare i dati con un linguaggio semplice e standard, facilitando la costruzione di nuove interrogazioni.   Integrità dei dati : I vincoli di integrità sono memorizzati e controllati dal Database Management System (DBMS), garantendo la coerenza dei dati e prevenendo anomalie.   Indipendenza dalla struttura logica e fisica dei dati : I programmi applicativi sono indipendenti dalla struttura logica dei dati, consentendo modifiche alla definizione delle strutture della base di dati senza alterare il software applicativo.   Utilizzo da più utenti e controllo della concorrenza : Il database può essere utilizzato da più utenti contemporaneamente, e il DBMS gestisce le operazioni in modo che non interferiscano tra loro.   Sicurezza dei dati : Vengono implementate procedure di controllo per prevenire accessi non autorizzati e proteggere i dati da guasti accidentali.  Differenze tra DB Relazionale e NoSQL    DB Relazionale:   Struttura dati:  Utilizzano tabelle per organizzare i dati in righe e colonne, con relazioni definite tra le tabelle.   Schema fisso:  Richiedono uno schema fisso che determina la struttura dei dati prima dell'inserimento.   Query SQL:  Utilizzano il linguaggio SQL (Structured Query Language) per interrogare e manipolare i dati.   Scalabilità verticale:  La scalabilità è spesso gestita attraverso l'aumento delle risorse hardware su un singolo server.  Database Non Relazionale (NoSQL):   Struttura dati flessibile:  Utilizzano diversi modelli di dati, come documenti, chiavi-valore, colonne o grafi, offrendo una maggiore flessibilità nella rappresentazione delle informazioni.   Schema dinamico:  Possono gestire dati con schemi dinamici, consentendo l'inserimento di nuovi campi senza la necessità di uno schema fisso predefinito.   Query specifiche del database:  Utilizzano spesso query specifiche del database o un linguaggio di interrogazione ad hoc per accedere e manipolare i dati.   Consistenza eventualmente consistente:  Alcuni database NoSQL sacrificano la coerenza immediata per garantire una maggiore disponibilità e tolleranza agli errori, seguendo il modello di consistenza eventualmente consistente.   Scalabilità orizzontale:  Sono progettati per scalare orizzontalmente, distribuendo il carico su più server per gestire volumi di dati e carichi di lavoro crescenti.  DB Non Relazionale (NoSQL):   Struttura dati flessibile:  Utilizzano diversi modelli di dati, come documenti, chiavi-valore, colonne o grafi, offrendo una maggiore flessibilità nella rappresentazione delle informazioni.   Schema dinamico:  Possono gestire dati con schemi dinamici, consentendo l'inserimento di nuovi campi senza la necessità di uno schema fisso predefinito.   Query specifiche del database:  Utilizzano spesso query specifiche del database o un linguaggio di interrogazione ad hoc per accedere e manipolare i dati.   Consistenza eventualmente consistente:  Alcuni database NoSQL sacrificano la coerenza immediata per garantire una maggiore disponibilità e tolleranza agli errori, seguendo il modello di consistenza eventualmente consistente.   Scalabilità orizzontale:  Sono progettati per scalare orizzontalmente, distribuendo il carico su più server per gestire volumi di dati e carichi di lavoro crescenti."},{"id":"content:1.teoria:2.dbms.md","path":"/teoria/dbms","dir":"teoria","title":"DBMS","description":"Un Database Management System (DBMS) è un software progettato per creare, gestire e facilitare l'accesso e l'uso di un database. La sua funzione principale è consentire agli utenti di interagire con il database in modo efficiente, fornendo strumenti per l'inserimento, l'aggiornamento, la gestione e l'interrogazione dei dati.","keywords":["Caratteristiche di un DBMS","Esempi di DBMS"],"body":"  DBMS  Un   Database Management System  (DBMS) è un software progettato per creare, gestire e facilitare l'accesso e l'uso di un database. La sua funzione principale è consentire agli utenti di interagire con il database in modo efficiente, fornendo strumenti per l'inserimento, l'aggiornamento, la gestione e l'interrogazione dei dati.  Caratteristiche di un DBMS  Un Database Management System (DBMS) deve svolgere le seguenti funzioni:  Definizione dei dati: Permettere la creazione di una nuova base di dati, definendo gli archivi, la loro struttura, le relazioni logiche, gli accessi limitati e i vincoli. Questa operazione avviene tramite un linguaggio specifico chiamato   Data Definition Language (DDL) .  Manipolazione dei dati: Agevolare gli utenti nell'inserimento, cancellazione e modifica dei dati nel database attraverso un linguaggio dedicato chiamato   Data Manipulation Language (DML) .  Interrogazione del database: Consentire l'estrazione di informazioni interrogando la base dati mediante un linguaggio di interrogazione noto come   Query Language (QL) .  Semplicità e standardizzazione: Eseguire tutte le operazioni sopra menzionate utilizzando un linguaggio semplice, apprendibile e standardizzato. Ciò facilita agli utenti il passaggio da un DBMS a un altro senza difficoltà.  In breve, il DBMS fornisce gli strumenti e i linguaggi necessari per definire, manipolare e interrogare un database in modo efficace e standardizzato.  Esempi di DBMS     Access : Un sistema di gestione del database relazionale sviluppato da Microsoft, comunemente utilizzato in ambienti aziendali e aziendali.   MySQL : Un DBMS open source molto popolare, noto per la sua velocità e affidabilità. È spesso utilizzato in applicazioni web e in ambienti di sviluppo software.   Oracle Database : Un sistema di gestione del database relazionale sviluppato da Oracle Corporation, utilizzato ampiamente in ambienti aziendali e di grandi dimensioni.   PostgreSQL : Un sistema di gestione del database relazionale open source noto per la sua conformità agli standard e le funzionalità avanzate.   SQLite : Un DBMS leggero e incorporato che non richiede un processo separato e può essere integrato direttamente nelle applicazioni. È comunemente utilizzato in applicazioni mobili e embedded.   MongoDB : Un sistema di gestione del database non relazionale (NoSQL) orientato ai documenti, progettato per gestire grandi volumi di dati e spesso utilizzato in applicazioni web.   MariaDB : Un fork di   MySQL  che è diventato un sistema di gestione del database open source indipendente con il suo sviluppo attivo."},{"id":"content:1.teoria:3.modelli-db.md","path":"/teoria/modelli-db","dir":"teoria","title":"Modelli DB","description":"Il database rappresenta un modello della realtà, riflettendo gli stati e gli eventi dell'ambiente aziendale. I dati sono descritti attraverso modelli, tra cui il concettuale, logico e fisico. La progettazione iniziale del database è cruciale e indipendente da hardware, supporti fisici e caratteristiche del DBMS. Questo approccio consente al database di evolversi nel tempo, adattandosi alle esigenze e alle informazioni in continua crescita.","keywords":["Modello concettuale","Il modello logico","Il modello fisico"],"body":"  Modelli DB  Il database rappresenta un modello della realtà, riflettendo gli stati e gli eventi dell'ambiente aziendale. I dati sono descritti attraverso modelli, tra cui il   concettuale, logico e fisico . La progettazione iniziale del database è cruciale e indipendente da hardware, supporti fisici e caratteristiche del DBMS. Questo approccio consente al database di evolversi nel tempo, adattandosi alle esigenze e alle informazioni in continua crescita.    Modello concettuale  Il modello concettuale, noto come modello Entità/Associazioni (E/R), è utilizzato per la progettazione concettuale dei database. Si basa sull'identificazione di   1.entità ,   2.associazioni  e   3.attributi  in una entità. Le entità rappresentano gli oggetti, gli attributi sono le caratteristiche delle entità, e le associazioni descrivono le relazioni logiche tra le entità. Questi elementi sono rappresentati graficamente in un diagramma E/R, offrendo una visualizzazione chiara della struttura e delle relazioni nel contesto della progettazione del database.    Il modello logico  Il modello logico, detto anche modello a livello di record, si sviluppa dallo schema concettuale Entità/Associazioni e si concentra sulle strutture che organizzano i dati per consentire operazioni di manipolazione e interrogazione. Tre modelli principali a livello di record emersi negli anni Sessanta sono il modello   gerarchico , il modello   reticolare  e il modello   relazionale . Nel modello relazionale, in particolare, le basi di dati sono organizzate in tabelle con relazioni definite tra di loro. Questo modello ha prevalso e ha guidato lo sviluppo di numerosi software DBMS, diventando dominante anche nei personal computer. Nei modelli gerarchico e reticolare, le associazioni tra entità sono rappresentate mediante puntatori che collegano i record correlati.  Il   modello relazionale  si fonda su concetti matematici e privilegia l'uso rigoroso del   linguaggio matematico  con due obiettivi principali: utilizzare un linguaggio universalmente noto e eliminare ambiguità nella terminologia e simbologia. Questo modello, basato sui valori, descrive le associazioni tra entità esclusivamente attraverso i valori nei campi delle tabelle, senza ricorrere all'uso di puntatori.  Il modello fisico  Il modello fisico dei dati descrive concretamente come un modello logico sia implementato sulle memorie di massa del computer. Nel contesto del modello relazionale, specifica la   realizzazione delle tabelle , l'implementazione dei   vincoli  sui dati, la rappresentazione delle   associazioni  tra tabelle, la creazione di   indici  sui campi e   altri dettagli . Il modello fisico affronta questioni gestite dai progettisti di un particolare DBMS. Esempi di DBMS che gestiscono i modelli fisici dei dati includono Oracle, DB2, MySQL, SQL Server e Access."},{"id":"content:1.teoria:4.progettazione-concettuale.md","path":"/teoria/progettazione-concettuale","dir":"teoria","title":"Progettazione Concettuale","description":"Lo sviluppo di una base dati per un'applicazione comprende tre fasi di progettazione: concettuale, organizzazione logica e implementazione fisica. La progettazione concettuale, essenziale per integrare le visioni degli utenti e dei progettisti, richiede precisione e chiarezza. Il modello entità/associazioni, con schemi grafici rappresentati in un documento, incarna queste caratteristiche, fornendo una base comprensibile anche per utenti non tecnici.","keywords":[""],"body":"  Progettazione Concettuale  Lo sviluppo di una base dati per un'applicazione comprende tre fasi di progettazione: concettuale, organizzazione logica e implementazione fisica. La progettazione concettuale, essenziale per integrare le visioni degli utenti e dei progettisti, richiede precisione e chiarezza. Il modello   entità/associazioni , con schemi grafici rappresentati in un documento, incarna queste caratteristiche, fornendo una base comprensibile anche per utenti non tecnici.   L'   UML  (Unified Modeling Language, Linguaggio Unificato di Modellazione) è un linguaggio grafico utilizzato per visualizzare, definire, specificare e documentare tutte le costruzioni dei sistemi software. "},{"id":"content:2.pratica:1.Installazione.md","path":"/pratica/installazione","dir":"pratica","title":"Installazione","description":"","keywords":["Installazione","Risoluzione degli errori"],"body":"  Installazione  Ecco la procedura eseguita in classe per l'installazione di EasyPHP   1. Scarica il software:   Visitare il sito ufficiale di EasyPHP   https://www.easyphp.org/  o la pagina di   download .  Selezionare la versione DEV Server, e non Web Server\n    2. Avvia l'installazione:   Dopo aver scaricato il file di installazione, eseguilo facendo doppio clic.  Segui le istruzioni guidate fornite dal programma di installazione.   3. Configura le opzioni:  Durante l'installazione, potresti essere richiesto di configurare alcune opzioni come la directory di installazione e le componenti specifiche da installare (Apache, PHP, MySQL, ecc.).     4. Completa l'installazione:  Attendi il completamento dell'installazione.   5. Avvia EasyPHP:  Dopo l'installazione, avvia EasyPHP utilizzando l'icona o il menu Start del tuo sistema operativo.  Risoluzione degli errori    Nota Bene:   in alcune installazioni dopo l'avvio di EasyPHP potrebbe dare il seguente errore:   msvcr110.dll is missing  per risolvere questo problema è necessario seguire la soluzione proposta da un utente su   StackOverflow  , dove basta solo scaricare il seguente file:   vcredist_x86.exe"},{"id":"content:2.pratica:2.configurazione.md","path":"/pratica/configurazione","dir":"pratica","title":"Configurazione","description":"","keywords":["Avvio","Alterazione della porta Apache","Cambio dello Storage Engine","Avvio di phpMyAdmin"],"body":"  Configurazione  Avvio       Avvia EasyPHP:   Fai doppio clic sull'icona di EasyPHP.  Se non si apre nulla, non preoccuparti. EasyPHP si avvia come task in background.   Apri dalla Tray di Windows:   Vai sulla tray di Windows (area vicino all'orologio).  Trova l'icona di EasyPHP.  Fai clic destro sull'icona di EasyPHP.   Apri il Pannello Web:   Nel menu contestuale, seleziona \"Open Dashboard\".\nQuesto dovrebbe aprire il pannello web di EasyPHP all'indirizzo locale   http://127.0.0.1:1111/ .  Seguendo questi passaggi, dovresti poter accedere al pannello di controllo di EasyPHP e gestire le tue impostazioni, database e servizi web.  Alterazione della porta Apache      Accedi al Pannello delle Applicazioni:  Nella dashboard di EasyPHP, cerca opzioni come \"Http Server\" o \"Apache\". Queste opzioni possono variare a seconda della versione specifica di EasyPHP.   Modifica della Porta:   Cerca una sezione o un'opzione che ti permetta di modificare la porta di Apache.  Modifica la porta predefinita a 8080 o qualsiasi altra porta desiderata.   Riavvio di Apache :   Successivamente, cerca un pulsante o un'opzione per riavviare Apache attraverso l'interfaccia web di EasyPHP, oppure avvialo se non lo avevi già avviato in precedenza.  Cambio dello Storage Engine     Accedi al Menu Applicazioni di EasyPHP:   Fai clic sull'icona di EasyPHP per aprire il menu delle   applicazioni .  Seleziona il Database Server MySQL:   Nel menu a tendina, trova e seleziona   db server .\nSuccessivamente, scegli   MySQL 5.7.17 x86  o la versione specifica che stai utilizzando.  Apri il File di Configurazione:   Clicca sul pulsante   Configuration File  per aprire il file di configurazione di MySQL.  Modifica la Linea dello Storage Engine di Default:   All'interno del file di configurazione, cerca la linea che assegna il motore di memorizzazione di default. Potrebbe assomigliare a:     default-storage-engine = MyISAM\n   Modifica il valore a quello desiderato, ad esempio, se vuoi utilizzare il motore InnoDB:     default-storage-engine = InnoDB\n  Salva le Modifiche:   Salva le modifiche apportate al file di configurazione.  Riavvio del Server MySQL:   Riavvia il server MySQL attraverso l'interfaccia di EasyPHP o utilizzando altri metodi disponibili nell'ambiente EasyPHP.\nRicorda che le modifiche ai motori di memorizzazione potrebbero richiedere il riavvio del server MySQL per essere applicate. Verifica che le modifiche siano effettive dopo il riavvio del server.  Avvio di phpMyAdmin     Avvia Apache   Web Server  e MySQL   Database Server :   Assicurati di avviare sia il server Apache che il server MySQL attraverso l'interfaccia di EasyPHP.  Attendere pazientemente che i server si avviino correttamente.  Apri phpMyAdmin dall'Interfaccia di EasyPHP:   Dopo l'avvio dei server, fai clic sul pulsante   Open  accanto a   MySQL Administration: PhpMyAdmin 4.7.0  nell'interfaccia di EasyPHP.  Accesso a phpMyAdmin:   L'interfaccia web di phpMyAdmin dovrebbe aprirsi automaticamente nel tuo browser predefinito.  html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}"}]