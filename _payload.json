[{"data":1,"prerenderedAt":50},["Reactive",2],{"search-api":3},[4,11,23,32,42],{"id":5,"path":6,"dir":7,"title":8,"description":7,"keywords":9,"body":10},"content:0.index.md","/","","Home",[],"     Livello Applicativo dell'ISO/OSI.   Questa relazione ti spiegerà i seguenti concetti del livello applicativo:     I Protocolli principali ed il loro funzionamento  Il modello   client  /   server  I Protocolli   FTP ,   Email ,   DNS ,   HTTP  in dettaglio",{"id":12,"path":13,"dir":14,"title":15,"description":16,"keywords":17,"body":22},"content:1.teoria:1.database.md","/teoria/database","teoria","Database","Le basi di dati, o database, sono archivi di dati organizzati e progettati con tecniche di modellazione dati, gestiti su memorie di massa dei computer attraverso software specializzati. L'obiettivo è manipolare e recuperare i dati in modo efficiente, superando le limitazioni degli archivi tradizionali.",[18,19,20,21],"I Record e i Campi","Chiave Primaria","Proprietà di un DB","Differenze tra DB Relazionale e NoSQL","  Database  Le basi di dati, o database, sono archivi di dati organizzati e progettati con tecniche di modellazione dati, gestiti su memorie di massa dei computer attraverso software specializzati. L'obiettivo è manipolare e recuperare i dati in modo efficiente, superando le limitazioni degli archivi tradizionali.    I Record e i Campi  Un file è una collezione di   record , cioè di informazioni logicamente omogenee che\ndescrivono i singoli elementi di una realtà considerata. Ogni record è composto da un insieme di   campi  che contengono i valori assunti dalle caratteristiche scelte per descrivere la realtà.    Chiave Primaria  Una chiave primaria in un database è un campo o un insieme di campi che identifica univocamente ogni record in una tabella. La sua principale caratteristica è la sua unicità all'interno della tabella, garantendo che ogni riga abbia un valore unico per la chiave primaria. Inoltre, la chiave primaria non può contenere valori nulli, e viene utilizzata per stabilire relazioni tra tabelle all'interno del database.  Proprietà di un DB      Eliminazione della ridondanza e dell'inconsistenza : I dati non sono duplicati in archivi separati, evitando campi uguali con valori diversi.   Facilità di accesso ai dati : Il recupero dei dati è rapido e trasparente, anche in database di grandi dimensioni con richieste simultanee da parte di più utenti.   Interrogazioni non predefinite : È possibile interrogare i dati con un linguaggio semplice e standard, facilitando la costruzione di nuove interrogazioni.   Integrità dei dati : I vincoli di integrità sono memorizzati e controllati dal Database Management System (DBMS), garantendo la coerenza dei dati e prevenendo anomalie.   Indipendenza dalla struttura logica e fisica dei dati : I programmi applicativi sono indipendenti dalla struttura logica dei dati, consentendo modifiche alla definizione delle strutture della base di dati senza alterare il software applicativo.   Utilizzo da più utenti e controllo della concorrenza : Il database può essere utilizzato da più utenti contemporaneamente, e il DBMS gestisce le operazioni in modo che non interferiscano tra loro.   Sicurezza dei dati : Vengono implementate procedure di controllo per prevenire accessi non autorizzati e proteggere i dati da guasti accidentali.  Differenze tra DB Relazionale e NoSQL    DB Relazionale:   Struttura dati:  Utilizzano tabelle per organizzare i dati in righe e colonne, con relazioni definite tra le tabelle.   Schema fisso:  Richiedono uno schema fisso che determina la struttura dei dati prima dell'inserimento.   Query SQL:  Utilizzano il linguaggio SQL (Structured Query Language) per interrogare e manipolare i dati.   Scalabilità verticale:  La scalabilità è spesso gestita attraverso l'aumento delle risorse hardware su un singolo server.  Database Non Relazionale (NoSQL):   Struttura dati flessibile:  Utilizzano diversi modelli di dati, come documenti, chiavi-valore, colonne o grafi, offrendo una maggiore flessibilità nella rappresentazione delle informazioni.   Schema dinamico:  Possono gestire dati con schemi dinamici, consentendo l'inserimento di nuovi campi senza la necessità di uno schema fisso predefinito.   Query specifiche del database:  Utilizzano spesso query specifiche del database o un linguaggio di interrogazione ad hoc per accedere e manipolare i dati.   Consistenza eventualmente consistente:  Alcuni database NoSQL sacrificano la coerenza immediata per garantire una maggiore disponibilità e tolleranza agli errori, seguendo il modello di consistenza eventualmente consistente.   Scalabilità orizzontale:  Sono progettati per scalare orizzontalmente, distribuendo il carico su più server per gestire volumi di dati e carichi di lavoro crescenti.  DB Non Relazionale (NoSQL):   Struttura dati flessibile:  Utilizzano diversi modelli di dati, come documenti, chiavi-valore, colonne o grafi, offrendo una maggiore flessibilità nella rappresentazione delle informazioni.   Schema dinamico:  Possono gestire dati con schemi dinamici, consentendo l'inserimento di nuovi campi senza la necessità di uno schema fisso predefinito.   Query specifiche del database:  Utilizzano spesso query specifiche del database o un linguaggio di interrogazione ad hoc per accedere e manipolare i dati.   Consistenza eventualmente consistente:  Alcuni database NoSQL sacrificano la coerenza immediata per garantire una maggiore disponibilità e tolleranza agli errori, seguendo il modello di consistenza eventualmente consistente.   Scalabilità orizzontale:  Sono progettati per scalare orizzontalmente, distribuendo il carico su più server per gestire volumi di dati e carichi di lavoro crescenti.",{"id":24,"path":25,"dir":14,"title":26,"description":27,"keywords":28,"body":31},"content:1.teoria:2.dbms.md","/teoria/dbms","DBMS","Un Database Management System (DBMS) è un software progettato per creare, gestire e facilitare l'accesso e l'uso di un database. La sua funzione principale è consentire agli utenti di interagire con il database in modo efficiente, fornendo strumenti per l'inserimento, l'aggiornamento, la gestione e l'interrogazione dei dati.",[29,30],"Caratteristiche di un DBMS","Esempi di DBMS","  DBMS  Un   Database Management System  (DBMS) è un software progettato per creare, gestire e facilitare l'accesso e l'uso di un database. La sua funzione principale è consentire agli utenti di interagire con il database in modo efficiente, fornendo strumenti per l'inserimento, l'aggiornamento, la gestione e l'interrogazione dei dati.  Caratteristiche di un DBMS  Un Database Management System (DBMS) deve svolgere le seguenti funzioni:  Definizione dei dati: Permettere la creazione di una nuova base di dati, definendo gli archivi, la loro struttura, le relazioni logiche, gli accessi limitati e i vincoli. Questa operazione avviene tramite un linguaggio specifico chiamato   Data Definition Language (DDL) .  Manipolazione dei dati: Agevolare gli utenti nell'inserimento, cancellazione e modifica dei dati nel database attraverso un linguaggio dedicato chiamato   Data Manipulation Language (DML) .  Interrogazione del database: Consentire l'estrazione di informazioni interrogando la base dati mediante un linguaggio di interrogazione noto come   Query Language (QL) .  Semplicità e standardizzazione: Eseguire tutte le operazioni sopra menzionate utilizzando un linguaggio semplice, apprendibile e standardizzato. Ciò facilita agli utenti il passaggio da un DBMS a un altro senza difficoltà.  In breve, il DBMS fornisce gli strumenti e i linguaggi necessari per definire, manipolare e interrogare un database in modo efficace e standardizzato.  Esempi di DBMS     Access : Un sistema di gestione del database relazionale sviluppato da Microsoft, comunemente utilizzato in ambienti aziendali e aziendali.   MySQL : Un DBMS open source molto popolare, noto per la sua velocità e affidabilità. È spesso utilizzato in applicazioni web e in ambienti di sviluppo software.   Oracle Database : Un sistema di gestione del database relazionale sviluppato da Oracle Corporation, utilizzato ampiamente in ambienti aziendali e di grandi dimensioni.   PostgreSQL : Un sistema di gestione del database relazionale open source noto per la sua conformità agli standard e le funzionalità avanzate.   SQLite : Un DBMS leggero e incorporato che non richiede un processo separato e può essere integrato direttamente nelle applicazioni. È comunemente utilizzato in applicazioni mobili e embedded.   MongoDB : Un sistema di gestione del database non relazionale (NoSQL) orientato ai documenti, progettato per gestire grandi volumi di dati e spesso utilizzato in applicazioni web.   MariaDB : Un fork di   MySQL  che è diventato un sistema di gestione del database open source indipendente con il suo sviluppo attivo.",{"id":33,"path":34,"dir":14,"title":35,"description":36,"keywords":37,"body":41},"content:1.teoria:3.modelli-db.md","/teoria/modelli-db","Modelli DB","Il database rappresenta un modello della realtà, riflettendo gli stati e gli eventi dell'ambiente aziendale. I dati sono descritti attraverso modelli, tra cui il concettuale, logico e fisico. La progettazione iniziale del database è cruciale e indipendente da hardware, supporti fisici e caratteristiche del DBMS. Questo approccio consente al database di evolversi nel tempo, adattandosi alle esigenze e alle informazioni in continua crescita.",[38,39,40],"Modello concettuale","Il modello logico","Il modello fisico","  Modelli DB  Il database rappresenta un modello della realtà, riflettendo gli stati e gli eventi dell'ambiente aziendale. I dati sono descritti attraverso modelli, tra cui il   concettuale, logico e fisico . La progettazione iniziale del database è cruciale e indipendente da hardware, supporti fisici e caratteristiche del DBMS. Questo approccio consente al database di evolversi nel tempo, adattandosi alle esigenze e alle informazioni in continua crescita.    Modello concettuale  Il modello concettuale, noto come modello Entità/Associazioni (E/R), è utilizzato per la progettazione concettuale dei database. Si basa sull'identificazione di   1.entità ,   2.associazioni  e   3.attributi  in una entità. Le entità rappresentano gli oggetti, gli attributi sono le caratteristiche delle entità, e le associazioni descrivono le relazioni logiche tra le entità. Questi elementi sono rappresentati graficamente in un diagramma E/R, offrendo una visualizzazione chiara della struttura e delle relazioni nel contesto della progettazione del database.    Il modello logico  Il modello logico, detto anche modello a livello di record, si sviluppa dallo schema concettuale Entità/Associazioni e si concentra sulle strutture che organizzano i dati per consentire operazioni di manipolazione e interrogazione. Tre modelli principali a livello di record emersi negli anni Sessanta sono il modello   gerarchico , il modello   reticolare  e il modello   relazionale . Nel modello relazionale, in particolare, le basi di dati sono organizzate in tabelle con relazioni definite tra di loro. Questo modello ha prevalso e ha guidato lo sviluppo di numerosi software DBMS, diventando dominante anche nei personal computer. Nei modelli gerarchico e reticolare, le associazioni tra entità sono rappresentate mediante puntatori che collegano i record correlati.  Il   modello relazionale  si fonda su concetti matematici e privilegia l'uso rigoroso del   linguaggio matematico  con due obiettivi principali: utilizzare un linguaggio universalmente noto e eliminare ambiguità nella terminologia e simbologia. Questo modello, basato sui valori, descrive le associazioni tra entità esclusivamente attraverso i valori nei campi delle tabelle, senza ricorrere all'uso di puntatori.  Il modello fisico  Il modello fisico dei dati descrive concretamente come un modello logico sia implementato sulle memorie di massa del computer. Nel contesto del modello relazionale, specifica la   realizzazione delle tabelle , l'implementazione dei   vincoli  sui dati, la rappresentazione delle   associazioni  tra tabelle, la creazione di   indici  sui campi e   altri dettagli . Il modello fisico affronta questioni gestite dai progettisti di un particolare DBMS. Esempi di DBMS che gestiscono i modelli fisici dei dati includono Oracle, DB2, MySQL, SQL Server e Access.",{"id":43,"path":44,"dir":45,"title":46,"description":47,"keywords":48,"body":49},"content:2.pratica:1.configurazione.md","/pratica/configurazione","pratica","Configurazione","Discover every component you can use in your content.",[],"  Configurazione  Discover every component you can use in your content.",1700601465488]